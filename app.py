# -*- coding: utf-8 -*-
"""7_Despliegue_Videojuegos_con_streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vA4TQFvCXE_x3EIFnkZ8mwsj2SIzLCZf

# Despliegue

- Cargamos el modelo
- Cargamos los datos futuros
- Preparar los datos futuros
- Aplicamos el modelo para la predicción
"""

#Cargamos librerías principales
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Cargamos el modelo
import pickle
filename = 'modelo.pkl-regrresion'
model_Tree, model_Knn, model_NN, min_max_scaler, variables = pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros
##data = pd.read_csv("videojuegos-datosFuturos.csv")
##data.head()

#Interfaz gráfica # NO SE EJECUTA EN COLLAB
#Se crea interfaz gráfica con streamlit para captura de los datos

import streamlit as st

st.title('Predicción de inversión en una tienda de videojuegos')

Edad = st.slider('Edad', min_value=14, max_value=52, value=20, step=1) #Linea que solo sirve para númericos
videojuego = st.selectbox('Videojuego', ["'Mass Effect'","'Battlefield'", "'Fifa'","'KOA: Reckoning'","'Crysis'","'Sim City'","'Dead Space'","'F1'"]) #Categorias en desplegable
Plataforma = st.selectbox('Plataforma', ["'Play Station'", "'Xbox'","PC","Otros"]) #Categorias en desplegable
Sexo = st.selectbox('Sexo', ['Hombre', 'Mujer']) #Categorias en desplegable
Consumidor_habitual = st.selectbox('Consumidor_habitual', ['True', 'False']) #Categorias en desplegable


#Dataframe
datos = [[Edad, videojuego,Plataforma,Sexo,Consumidor_habitual]]
data = pd.DataFrame(datos, columns=['Edad', 'videojuego','Plataforma','Sexo','Consumidor_habitual']) #Dataframe con los mismos nombres de variables

#Se realiza la preparación
data_preparada=data.copy()

#En despliegue drop_first= False
data_preparada = pd.get_dummies(data_preparada, columns=['videojuego', 'Plataforma','Sexo', 'Consumidor_habitual'], drop_first=False, dtype=int)
data_preparada.head()

#Se adicionan las columnas faltantes
data_preparada=data_preparada.reindex(columns=variables,fill_value=0)
data_preparada.head()

"""# **Predicciones**"""

#Hacemos la predicción con el Tree
Y_Tree = model_Tree.predict(data_preparada)
print(Y_Tree)

data['Prediccion Tree']=Y_Tree
data.head()

#Se normaliza la edad para predecir con Knn, Red
#En los despliegues no se llama fit
data_preparada[['Edad']]= min_max_scaler.transform(data_preparada[['Edad']])
data_preparada.head()

#Hacemos la predicción con Knn
Y_Knn = model_Knn.predict(data_preparada)
data['Prediccion Knn']=Y_Knn
data.head()

#Hacemos la predicción con NN
Y_NN = model_NN.predict(data_preparada)
data['Prediccion Red Neuronal']=Y_NN
data.head()

#Predicciones finales
data